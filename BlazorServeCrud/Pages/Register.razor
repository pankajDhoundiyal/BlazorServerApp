@layout LoginLayout
@page "/register"
@attribute [AllowAnonymous]
@using Services;
@inject IUserService userService
@inject NavigationManager _nav
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Register User</PageTitle>
<h3>Register User</h3>
<div class="row">
    <div class="col-md-6">
        <EditForm Model="@user" OnValidSubmit="register">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="FirstName">First Name</label>
                <InputText class="form-control" @bind-Value="user.FirstName" />
                <ValidationMessage For="@(()=>user.FirstName)" />
            </div>
            <div class="form-group">
                <label for="LastName">Last Name</label>
                <InputText class="form-control" @bind-Value="user.LastName" />
                <ValidationMessage For="@(()=>user.LastName)" />
            </div>
            <div class="form-group">
                <label for="LastName">Email</label>
                <InputText class="form-control" @bind-Value="user.Email" />
                <ValidationMessage For="@(()=>user.Email)" />
            </div>
            <div class="form-group">
                <label for="Email">Password</label>
                <InputText type="password" class="form-control" @bind-Value="user.Password" />
                <ValidationMessage For="@(()=>user.Password)" />
            </div>
            <div class="form-group">
                <label for="Email">Address</label>
                <InputText class="form-control" @bind-Value="user.Address" />
                <ValidationMessage For="@(()=>user.Address)" />
            </div>
            <div class="form-group">
                <label for="Email">Phone No</label>
                <InputText class="form-control" @bind-Value="user.PhoneNo" />
                <ValidationMessage For="@(()=>user.PhoneNo)" />
            </div>
            <div class="my-2">
                @message
            </div>
            <div class="my-2">
                <button type="submit" class="btn btn-primary">Register</button>
                <a href="/login" class="btn btn-outline-dark">Login</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    Models.User user = new();
    private string message = string.Empty;
    private async Task register()
    {
        var result = await userService.RegisterUserAsync(user);
        if (result)
        {
            await ProtectedSessionStore.SetAsync("User", user.Email);
            //_state.email = user.Email;
            //_nav.NavigateTo("users");
        }
        else
        {
            _nav.NavigateTo("register");
        }
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}
