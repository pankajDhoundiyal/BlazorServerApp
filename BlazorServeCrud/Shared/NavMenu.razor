@using Services;
@using BlazorServeCrud.Enum;
@using Blazored.SessionStorage
@inject ISessionStorageService sessionStorage
@inject IUserService userService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorServeCrud</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @*<div class="nav-item px-3">
 zzzzzzzzz           <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="persons">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Person
            </NavLink>
        </div>*@
        @if (UserRole == Role.Admin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin/users">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Users
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin/tasks">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Tasks
                </NavLink>
            </div>
        }
        @if (UserRole == Role.User)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="usertask">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Assigned Task &nbsp;
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private string userName;
    [Parameter]
    public string UserEmail { get; set; }
    public Role UserRole { get; set; }
    protected override async Task OnInitializedAsync()
    {
        
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userName = await sessionStorage.GetItemAsync<string>("UserName");
            var loggedInUser = await userService.GetUserByEmailAsync(userName);
            if (loggedInUser != null)
            {
                UserRole = loggedInUser.Role; // Assuming the Role property exists in your user model
            }

            StateHasChanged();
        }
    }
}
